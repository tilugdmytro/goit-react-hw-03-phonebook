{"ast":null,"code":"var _jsxFileName = \"/Users/dmytro/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Form/Form.js\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\"; // import PropTypes from \"prop-types\";\n// import s from \"./Section.module.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \" \",\n      number: \" \"\n    };\n    this.nameId = uuidv4();\n    this.numberId = uuidv4();\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \" \",\n        number: \" \"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: this.nameId //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          //   title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          ,\n          required: true,\n          value: this.state.name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          id: this.numberId //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          //   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          ,\n          required: true,\n          value: this.state.number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Section.propTypes = {\n//   title: PropTypes.string.isRequired,\n// };\n\n\nexport default Form;","map":{"version":3,"sources":["/Users/dmytro/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Form/Form.js"],"names":["React","Component","v4","uuidv4","Form","state","name","number","nameId","numberId","handleChange","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CACA;AACA;;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,GADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;AAAA,SAM3BC,MAN2B,GAMlBL,MAAM,EANY;AAAA,SAO3BM,QAP2B,GAOhBN,MAAM,EAPU;;AAAA,SAS3BO,YAT2B,GASXC,KAAD,IAAW;AACxB,YAAM;AAAEL,QAAAA,IAAF;AAAQM,QAAAA;AAAR,UAAkBD,KAAK,CAACE,aAA9B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACR,IAAD,GAAQM;AAAV,OAAd;AACD,KAZ0B;;AAAA,SAa3BG,YAb2B,GAaXJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKb,KAAzB;AACA,WAAKc,KAAL;AACD,KAjB0B;;AAAA,SAmB3BA,KAnB2B,GAmBnB,MAAM;AACZ,WAAKL,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAAd;AACD,KArB0B;AAAA;;AAuB3Ba,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,8BACE;AAAA,2BACO,GADP,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAE,KAAKP,MAHX,CAIE;AACA;AALF;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAPpB;AAQE,UAAA,QAAQ,EAAE,KAAKI;AARjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA,6BACS,GADT,eAEE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,EAAE,EAAE,KAAKD,QAHX,CAIE;AACA;AALF;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,MAPpB;AAQE,UAAA,QAAQ,EAAE,KAAKG;AARjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA2BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAvD0B,C,CA0D7B;AACA;AACA;;;AAEA,eAAeN,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n// import PropTypes from \"prop-types\";\n// import s from \"./Section.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \" \",\n    number: \" \",\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \" \", number: \" \" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name{\" \"}\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameId}\n            //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //   title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number{\" \"}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberId}\n            //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            //   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\n// Section.propTypes = {\n//   title: PropTypes.string.isRequired,\n// };\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}