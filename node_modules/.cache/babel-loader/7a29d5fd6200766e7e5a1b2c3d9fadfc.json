{"ast":null,"code":"var _jsxFileName = \"/Users/dmytro/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: \"123 \"\n    };\n\n    this.handleInputChange = event => {\n      console.log(event);\n    };\n  }\n\n  render() {\n    // const { good, neutral, bad } = this.state;\n    // const total = this.countTotalFeedback();\n    // const positivePercentage = this.countPositiveFeedbackPercentage();\n    // const keys = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.inputValue,\n        onChange: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmytro/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.js"],"names":["React","Component","App","state","inputValue","handleInputChange","event","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,UAAU,EAAE;AADN,KADkB;;AAAA,SAK1BC,iBAL0B,GAKLC,KAAD,IAAW;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPyB;AAAA;;AAS1BG,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AAEA,wBACE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,UAArC;AAAiD,QAAA,QAAQ;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApByB;;AAuB5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    inputValue: \"123 \",\n  };\n\n  handleInputChange = (event) => {\n    console.log(event);\n  };\n\n  render() {\n    // const { good, neutral, bad } = this.state;\n    // const total = this.countTotalFeedback();\n    // const positivePercentage = this.countPositiveFeedbackPercentage();\n    // const keys = Object.keys(this.state);\n\n    return (\n      <div>\n        <input type=\"text\" value={this.state.inputValue} onChange />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}