{"ast":null,"code":"var _jsxFileName = \"/Users/dmytro/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Form/Form.js\";\nimport React, { Component } from \"react\"; // import PropTypes from \"prop-types\";\n// import s from \"./Section.module.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \" \",\n      number: \" \"\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \" \",\n        number: \" \"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\" //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          //   title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          ,\n          required: true,\n          value: this.state.name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\" //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          //   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          ,\n          required: true,\n          value: this.state.number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Section.propTypes = {\n//   title: PropTypes.string.isRequired,\n// };\n\n\nexport default Form;","map":{"version":3,"sources":["/Users/dmytro/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Form/Form.js"],"names":["React","Component","Form","state","name","number","handleChange","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BE,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,GADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;;AAAA,SAK3BC,YAL2B,GAKXC,KAAD,IAAW;AACxB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,KAAK,CAACE,aAA9B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACD,KAR0B;;AAAA,SAS3BG,YAT2B,GASXJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKX,KAAzB;AACD,KAZ0B;;AAAA,SAc3BY,KAd2B,GAcnB,MAAM;AACZ,WAAKL,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAAd;AACD,KAhB0B;AAAA;;AAkB3BW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,8BACE;AAAA,2BACO,GADP,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP,CAGE;AACA;AAJF;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IANpB;AAOE,UAAA,QAAQ,EAAE,KAAKE;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,6BACS,GADT,eAEE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP,CAGE;AACA;AAJF;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MANpB;AAOE,UAAA,QAAQ,EAAE,KAAKC;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAhD0B,C,CAmD7B;AACA;AACA;;;AAEA,eAAeJ,IAAf","sourcesContent":["import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n// import s from \"./Section.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \" \",\n    number: \" \",\n  };\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n  };\n\n  reset = () => {\n    this.setState({ name: \" \", number: \" \" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name{\" \"}\n          <input\n            type=\"text\"\n            name=\"name\"\n            //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //   title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number{\" \"}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            //   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\n// Section.propTypes = {\n//   title: PropTypes.string.isRequired,\n// };\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}