{"ast":null,"code":"var _jsxFileName = \"/Users/dmytro/Documents/GitHub/goit-react-hw-03-phonebook/src/components/Form/Form.js\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Form.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \" \",\n      number: \" \"\n    };\n    this.nameId = uuidv4();\n    this.numberId = uuidv4();\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \" \",\n        number: \" \"\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.name !== prevState.name) {\n      console.log(\"boom\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: s.form,\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.label,\n        htmlFor: this.nameId,\n        children: [\"Name\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          name: \"name\",\n          id: this.nameId // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          ,\n          required: true,\n          value: this.state.name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.label,\n        htmlFor: this.numberId,\n        children: [\"Number\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"tel\",\n          name: \"number\",\n          id: this.numberId // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          ,\n          required: true,\n          value: this.state.number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.btn,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default Form;","map":{"version":3,"sources":["/Users/dmytro/Documents/GitHub/goit-react-hw-03-phonebook/src/components/Form/Form.js"],"names":["React","Component","v4","uuidv4","PropTypes","s","Form","state","name","number","nameId","numberId","handleChange","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","componentDidUpdate","prevProps","prevState","console","log","render","form","label","input","btn","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \" \",\n    number: \" \",\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \" \", number: \" \" });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.name !== prevState.name) {\n      console.log(\"boom\");\n    }\n  }\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameId}>\n          Name{\" \"}\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            id={this.nameId}\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberId}>\n          Number{\" \"}\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberId}\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}